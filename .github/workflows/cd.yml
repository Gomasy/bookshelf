name: CD workflow
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: 'forge'
          MYSQL_USER: 'forge'
          MYSQL_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Prepare environment
      run: |
        sudo apt-get install -y --no-install-recommends fonts-ipafont-gothic
        ln -s .env.gh .env
    - name: Use PHP 7.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
    - name: Cache composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Use Node.js 14.x
      uses: actions/setup-node@v3
      with:
        node-version: 14.x
        cache: 'yarn'
    - name: Install dependencies (composer)
      run: composer install --prefer-dist
    - name: Install dependencies (yarn)
      run: yarn install --pure-lockfile
    - name: Run build
      run: yarn build
    - name: Run test
      run: composer test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: docker/setup-buildx-action@v2
        name: Set up Docker Buildx
      - uses: docker/login-action@v2
        name: Login to DockerHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        name: Build and push
        with:
          push: true
          tags: gomasy/bookshelf:latest
